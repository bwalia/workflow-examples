name: Webimpetus database restore

on:
  workflow_dispatch:
    inputs:
      TARGET_ENV:
        type: choice
        description: 'Please choose the environment'
        default: 'int'
        required: true
        options:
          - 'dev'    
          - 'int'    
          - 'test'    
          - 'acc'    
          - 'prod'
      FILE_NAME:
        description: 'Please enter the file name'
        required: true

env:
  TARGET_ENV : ${{ github.event.inputs.TARGET_ENV || 'int' }}
  FILE_NAME : ${{ github.event.inputs.FILE_NAME }}

jobs:
  restore:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up MinIO client
      run: |
        curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
        chmod +x mc
        sudo mv mc /usr/local/bin/

    - name: Configure MinIO client
      env:
        MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      run: |
        mc alias set myminio $MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY

    - name: List MinIO buckets and files
      run: |
        mc ls myminio

    - name: Check if backup file exists on MinIO
      env:
        BACKUP_PATH: "${{ env.TARGET_ENV }}/${{ env.FILE_NAME }}"
      run: |
        nslookup s3-cli.workstation.co.uk
        echo "Checking if file exists: myminio/webimpetus-database/$BACKUP_PATH"
        mc stat myminio/webimpetus-database/$BACKUP_PATH || { echo "File does not exist."; exit 1; }

    - name: Download backup from MinIO
      env:
        BACKUP_PATH: "${{ env.TARGET_ENV }}/${{ env.FILE_NAME }}"
      run: |
        ls -al /tmp
        echo $BACKUP_PATH
        echo ${{ secrets.MINIO_ENDPOINT }}
        echo ${{ secrets.MINIO_ACCESS_KEY }}
        echo ${{ secrets.MINIO_SECRET_KEY }}
        which mc
        mc cp myminio/webimpetus-database/$BACKUP_PATH /tmp/backup.sql

    - name: Restore database
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        cat /tmp/backup.sql

      